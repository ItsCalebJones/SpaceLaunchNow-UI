name: Test and Lint

on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]
  push:
    branches:
      - '**'
      - '!main'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run Cypress tests
        run: npm run ci:e2e
        
      - name: Generate Cypress report
        run: npm run cypress:report:createBundle
        
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2.12.0
        if: always()
        with:
          files: cypress/results/junit/testresults-*.xml
          
      - name: Upload Test Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            cypress/results/**/*.json
            cypress/results/**/*.xml
            
      - name: Upload HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: cypress-html-report
          path: cypress/reports/html

  lint:
    name: Format Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Check formatting
        run: npm run format:check

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.ref != 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: spacelaunchnow-ui:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
