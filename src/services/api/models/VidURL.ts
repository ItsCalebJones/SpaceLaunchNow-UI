/* tslint:disable */
/* eslint-disable */
/**
 * Launch Library
 * The Launch Library API is a product by The Space Devs with an up-to-date database of Spaceflight events.   While this API is free to use it is subject to rate limiting for non-authenticated requests.  Please use https://lldev.thespacedevs.com for development testing - the development endpoint has stale data but is not subject to any rate limits.  If you are interested in a higher rate limit please consider supporting the project on Patreon for access to an API Key.
 *
 * The version of the OpenAPI document: v2.2.0
 * Contact: support@thespacedevs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface VidURL
 */
export interface VidURL {
    /**
     * 
     * @type {number}
     * @memberof VidURL
     */
    priority?: number;
    /**
     * 
     * @type {string}
     * @memberof VidURL
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof VidURL
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof VidURL
     */
    featureImage?: string | null;
    /**
     * 
     * @type {string}
     * @memberof VidURL
     */
    url: string;
}

export function VidURLFromJSON(json: any): VidURL {
    return VidURLFromJSONTyped(json, false);
}

export function VidURLFromJSONTyped(json: any, ignoreDiscriminator: boolean): VidURL {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'priority': !exists(json, 'priority') ? undefined : json['priority'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'featureImage': !exists(json, 'feature_image') ? undefined : json['feature_image'],
        'url': json['url'],
    };
}

export function VidURLToJSON(value?: VidURL | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'priority': value.priority,
        'title': value.title,
        'description': value.description,
        'feature_image': value.featureImage,
        'url': value.url,
    };
}

