/* tslint:disable */
/* eslint-disable */
/**
 * Launch Library
 * The Launch Library API is a product by The Space Devs with an up-to-date database of Spaceflight events.   While this API is free to use it is subject to rate limiting for non-authenticated requests.  Please use https://lldev.thespacedevs.com for development testing - the development endpoint has stale data but is not subject to any rate limits.  If you are interested in a higher rate limit please consider supporting the project on Patreon for access to an API Key.
 *
 * The version of the OpenAPI document: v2.2.0
 * Contact: support@thespacedevs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AgencySerializerMini,
    AgencySerializerMiniFromJSON,
    AgencySerializerMiniFromJSONTyped,
    AgencySerializerMiniToJSON,
} from './AgencySerializerMini';
import {
    MissionPatch,
    MissionPatchFromJSON,
    MissionPatchFromJSONTyped,
    MissionPatchToJSON,
} from './MissionPatch';

/**
 * 
 * @export
 * @interface Program
 */
export interface Program {
    /**
     * 
     * @type {number}
     * @memberof Program
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof Program
     */
    readonly url: string;
    /**
     * 
     * @type {string}
     * @memberof Program
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Program
     */
    description?: string | null;
    /**
     * 
     * @type {Array<AgencySerializerMini>}
     * @memberof Program
     */
    readonly agencies: Array<AgencySerializerMini>;
    /**
     * 
     * @type {string}
     * @memberof Program
     */
    imageUrl: string;
    /**
     * 
     * @type {Date}
     * @memberof Program
     */
    startDate?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof Program
     */
    endDate?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof Program
     */
    infoUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Program
     */
    wikiUrl?: string | null;
    /**
     * 
     * @type {Array<MissionPatch>}
     * @memberof Program
     */
    readonly missionPatches: Array<MissionPatch>;
}

export function ProgramFromJSON(json: any): Program {
    return ProgramFromJSONTyped(json, false);
}

export function ProgramFromJSONTyped(json: any, ignoreDiscriminator: boolean): Program {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'url': json['url'],
        'name': json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'agencies': ((json['agencies'] as Array<any>).map(AgencySerializerMiniFromJSON)),
        'imageUrl': json['image_url'],
        'startDate': !exists(json, 'start_date') ? undefined : (json['start_date'] === null ? null : new Date(json['start_date'])),
        'endDate': !exists(json, 'end_date') ? undefined : (json['end_date'] === null ? null : new Date(json['end_date'])),
        'infoUrl': !exists(json, 'info_url') ? undefined : json['info_url'],
        'wikiUrl': !exists(json, 'wiki_url') ? undefined : json['wiki_url'],
        'missionPatches': ((json['mission_patches'] as Array<any>).map(MissionPatchFromJSON)),
    };
}

export function ProgramToJSON(value?: Program | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'description': value.description,
        'image_url': value.imageUrl,
        'start_date': value.startDate === undefined ? undefined : (value.startDate === null ? null : value.startDate.toISOString()),
        'end_date': value.endDate === undefined ? undefined : (value.endDate === null ? null : value.endDate.toISOString()),
        'info_url': value.infoUrl,
        'wiki_url': value.wikiUrl,
    };
}

