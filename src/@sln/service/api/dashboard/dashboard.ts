/**
 * Generated by orval v6.8.1 üç∫
 * Do not edit manually.
 * Launch Library
 * The Launch Library API is a product by The Space Devs with an up-to-date database of Spaceflight events. 

While this API is free to use it is subject to rate limiting for non-authenticated requests.

Please use https://lldev.thespacedevs.com for development testing - the development endpoint has stale data but is not subject to any rate limits.

If you are interested in a higher rate limit please consider supporting the project on Patreon for access to an API Key.
 * OpenAPI spec version: v2.2.0
 */
import axios,{
  AxiosRequestConfig,
  AxiosResponse,
  AxiosError
} from 'axios'
import {
  useQuery,
  UseQueryOptions,
  QueryFunction,
  UseQueryResult,
  QueryKey
} from 'react-query'


/**
 * Return a dashboard of SpaceX operations for Starship development.
 */
export const dashboardStarshipRetrieve = (
     options?: AxiosRequestConfig
 ): Promise<AxiosResponse<void>> => {
    return axios.get(
      `/2.2.0/dashboard/starship/`,options
    );
  }


export const getDashboardStarshipRetrieveQueryKey = () => [`/2.2.0/dashboard/starship/`];

    
export type DashboardStarshipRetrieveQueryResult = NonNullable<Awaited<ReturnType<typeof dashboardStarshipRetrieve>>>
export type DashboardStarshipRetrieveQueryError = AxiosError<unknown>

export const useDashboardStarshipRetrieve = <TData = Awaited<ReturnType<typeof dashboardStarshipRetrieve>>, TError = AxiosError<unknown>>(
  options?: { query?:UseQueryOptions<Awaited<ReturnType<typeof dashboardStarshipRetrieve>>, TError, TData>, axios?: AxiosRequestConfig}

  ):  UseQueryResult<TData, TError> & { queryKey: QueryKey } => {

  const {query: queryOptions, axios: axiosOptions} = options ?? {}

  const queryKey = queryOptions?.queryKey ?? getDashboardStarshipRetrieveQueryKey();

  

  const queryFn: QueryFunction<Awaited<ReturnType<typeof dashboardStarshipRetrieve>>> = ({ signal }) => dashboardStarshipRetrieve({ signal, ...axiosOptions });

  const query = useQuery<Awaited<ReturnType<typeof dashboardStarshipRetrieve>>, TError, TData>(queryKey, queryFn, queryOptions)

  return {
    queryKey,
    ...query
  }
}

