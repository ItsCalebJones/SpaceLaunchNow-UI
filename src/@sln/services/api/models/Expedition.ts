/* tslint:disable */
/* eslint-disable */
/**
 * Launch Library
 * The Launch Library API is a product by The Space Devs with an up-to-date database of Spaceflight events.   While this API is free to use it is subject to rate limiting for non-authenticated requests.  Please use https://lldev.thespacedevs.com for development testing - the development endpoint has stale data but is not subject to any rate limits.  If you are interested in a higher rate limit please consider supporting the project on Patreon for access to an API Key.
 *
 * The version of the OpenAPI document: v2.2.0
 * Contact: support@thespacedevs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    MissionPatch,
    MissionPatchFromJSON,
    MissionPatchFromJSONTyped,
    MissionPatchToJSON,
} from './MissionPatch';
import {
    SpaceStationSerializerForExpedition,
    SpaceStationSerializerForExpeditionFromJSON,
    SpaceStationSerializerForExpeditionFromJSONTyped,
    SpaceStationSerializerForExpeditionToJSON,
} from './SpaceStationSerializerForExpedition';

/**
 * 
 * @export
 * @interface Expedition
 */
export interface Expedition {
    /**
     * 
     * @type {number}
     * @memberof Expedition
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof Expedition
     */
    readonly url: string;
    /**
     * 
     * @type {string}
     * @memberof Expedition
     */
    name: string;
    /**
     * 
     * @type {Date}
     * @memberof Expedition
     */
    start: Date;
    /**
     * 
     * @type {Date}
     * @memberof Expedition
     */
    end?: Date | null;
    /**
     * 
     * @type {SpaceStationSerializerForExpedition}
     * @memberof Expedition
     */
    readonly spacestation: SpaceStationSerializerForExpedition | null;
    /**
     * 
     * @type {Array<MissionPatch>}
     * @memberof Expedition
     */
    readonly missionPatches: Array<MissionPatch>;
}

export function ExpeditionFromJSON(json: any): Expedition {
    return ExpeditionFromJSONTyped(json, false);
}

export function ExpeditionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Expedition {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'url': json['url'],
        'name': json['name'],
        'start': (new Date(json['start'])),
        'end': !exists(json, 'end') ? undefined : (json['end'] === null ? null : new Date(json['end'])),
        'spacestation': SpaceStationSerializerForExpeditionFromJSON(json['spacestation']),
        'missionPatches': ((json['mission_patches'] as Array<any>).map(MissionPatchFromJSON)),
    };
}

export function ExpeditionToJSON(value?: Expedition | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'start': (value.start.toISOString()),
        'end': value.end === undefined ? undefined : (value.end === null ? null : value.end.toISOString()),
    };
}

