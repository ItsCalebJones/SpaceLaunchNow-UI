/* tslint:disable */
/* eslint-disable */
/**
 * Launch Library
 * The Launch Library API is a product by The Space Devs with an up-to-date database of Spaceflight events.   While this API is free to use it is subject to rate limiting for non-authenticated requests.  Please use https://lldev.thespacedevs.com for development testing - the development endpoint has stale data but is not subject to any rate limits.  If you are interested in a higher rate limit please consider supporting the project on Patreon for access to an API Key.
 *
 * The version of the OpenAPI document: v2.2.0
 * Contact: support@thespacedevs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    SpacecraftFlightForDockingEvent,
    SpacecraftFlightForDockingEventFromJSON,
    SpacecraftFlightForDockingEventFromJSONTyped,
    SpacecraftFlightForDockingEventToJSON,
} from './SpacecraftFlightForDockingEvent';

/**
 * 
 * @export
 * @interface DockingEventDetailedSerializerForSpacestation
 */
export interface DockingEventDetailedSerializerForSpacestation {
    /**
     * 
     * @type {number}
     * @memberof DockingEventDetailedSerializerForSpacestation
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof DockingEventDetailedSerializerForSpacestation
     */
    readonly url: string;
    /**
     * 
     * @type {Date}
     * @memberof DockingEventDetailedSerializerForSpacestation
     */
    docking: Date;
    /**
     * 
     * @type {Date}
     * @memberof DockingEventDetailedSerializerForSpacestation
     */
    departure?: Date | null;
    /**
     * 
     * @type {SpacecraftFlightForDockingEvent}
     * @memberof DockingEventDetailedSerializerForSpacestation
     */
    readonly flightVehicle: SpacecraftFlightForDockingEvent | null;
}

export function DockingEventDetailedSerializerForSpacestationFromJSON(json: any): DockingEventDetailedSerializerForSpacestation {
    return DockingEventDetailedSerializerForSpacestationFromJSONTyped(json, false);
}

export function DockingEventDetailedSerializerForSpacestationFromJSONTyped(json: any, ignoreDiscriminator: boolean): DockingEventDetailedSerializerForSpacestation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'url': json['url'],
        'docking': (new Date(json['docking'])),
        'departure': !exists(json, 'departure') ? undefined : (json['departure'] === null ? null : new Date(json['departure'])),
        'flightVehicle': SpacecraftFlightForDockingEventFromJSON(json['flight_vehicle']),
    };
}

export function DockingEventDetailedSerializerForSpacestationToJSON(value?: DockingEventDetailedSerializerForSpacestation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'docking': (value.docking.toISOString()),
        'departure': value.departure === undefined ? undefined : (value.departure === null ? null : value.departure.toISOString()),
    };
}

