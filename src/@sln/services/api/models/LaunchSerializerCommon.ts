/* tslint:disable */
/* eslint-disable */
/**
 * Launch Library
 * The Launch Library API is a product by The Space Devs with an up-to-date database of Spaceflight events.   While this API is free to use it is subject to rate limiting for non-authenticated requests.  Please use https://lldev.thespacedevs.com for development testing - the development endpoint has stale data but is not subject to any rate limits.  If you are interested in a higher rate limit please consider supporting the project on Patreon for access to an API Key.
 *
 * The version of the OpenAPI document: v2.2.0
 * Contact: support@thespacedevs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AgencySerializerMini,
    AgencySerializerMiniFromJSON,
    AgencySerializerMiniFromJSONTyped,
    AgencySerializerMiniToJSON,
} from './AgencySerializerMini';
import {
    LaunchStatus,
    LaunchStatusFromJSON,
    LaunchStatusFromJSONTyped,
    LaunchStatusToJSON,
} from './LaunchStatus';
import {
    Mission,
    MissionFromJSON,
    MissionFromJSONTyped,
    MissionToJSON,
} from './Mission';
import {
    Pad,
    PadFromJSON,
    PadFromJSONTyped,
    PadToJSON,
} from './Pad';
import {
    Program,
    ProgramFromJSON,
    ProgramFromJSONTyped,
    ProgramToJSON,
} from './Program';
import {
    RocketSerializerCommon,
    RocketSerializerCommonFromJSON,
    RocketSerializerCommonFromJSONTyped,
    RocketSerializerCommonToJSON,
} from './RocketSerializerCommon';

/**
 * 
 * @export
 * @interface LaunchSerializerCommon
 */
export interface LaunchSerializerCommon {
    /**
     * 
     * @type {string}
     * @memberof LaunchSerializerCommon
     */
    readonly id: string;
    /**
     * 
     * @type {string}
     * @memberof LaunchSerializerCommon
     */
    readonly url: string;
    /**
     * 
     * @type {string}
     * @memberof LaunchSerializerCommon
     */
    slug: string;
    /**
     * 
     * @type {string}
     * @memberof LaunchSerializerCommon
     */
    name?: string;
    /**
     * 
     * @type {LaunchStatus}
     * @memberof LaunchSerializerCommon
     */
    readonly status: LaunchStatus | null;
    /**
     * 
     * @type {Date}
     * @memberof LaunchSerializerCommon
     */
    readonly lastUpdated: Date;
    /**
     * 
     * @type {Date}
     * @memberof LaunchSerializerCommon
     */
    net?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof LaunchSerializerCommon
     */
    windowEnd?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof LaunchSerializerCommon
     */
    windowStart?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof LaunchSerializerCommon
     */
    probability?: number | null;
    /**
     * 
     * @type {string}
     * @memberof LaunchSerializerCommon
     */
    holdreason?: string | null;
    /**
     * 
     * @type {string}
     * @memberof LaunchSerializerCommon
     */
    failreason?: string | null;
    /**
     * 
     * @type {string}
     * @memberof LaunchSerializerCommon
     */
    hashtag?: string | null;
    /**
     * 
     * @type {AgencySerializerMini}
     * @memberof LaunchSerializerCommon
     */
    readonly launchServiceProvider: AgencySerializerMini | null;
    /**
     * 
     * @type {RocketSerializerCommon}
     * @memberof LaunchSerializerCommon
     */
    readonly rocket: RocketSerializerCommon | null;
    /**
     * 
     * @type {Mission}
     * @memberof LaunchSerializerCommon
     */
    readonly mission: Mission | null;
    /**
     * 
     * @type {Pad}
     * @memberof LaunchSerializerCommon
     */
    readonly pad: Pad | null;
    /**
     * 
     * @type {boolean}
     * @memberof LaunchSerializerCommon
     */
    webcastLive?: boolean;
    /**
     * 
     * @type {string}
     * @memberof LaunchSerializerCommon
     */
    readonly image: string;
    /**
     * 
     * @type {string}
     * @memberof LaunchSerializerCommon
     */
    readonly infographic: string;
    /**
     * 
     * @type {Array<Program>}
     * @memberof LaunchSerializerCommon
     */
    readonly program: Array<Program>;
}

export function LaunchSerializerCommonFromJSON(json: any): LaunchSerializerCommon {
    return LaunchSerializerCommonFromJSONTyped(json, false);
}

export function LaunchSerializerCommonFromJSONTyped(json: any, ignoreDiscriminator: boolean): LaunchSerializerCommon {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'url': json['url'],
        'slug': json['slug'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'status': LaunchStatusFromJSON(json['status']),
        'lastUpdated': (new Date(json['last_updated'])),
        'net': !exists(json, 'net') ? undefined : (json['net'] === null ? null : new Date(json['net'])),
        'windowEnd': !exists(json, 'window_end') ? undefined : (json['window_end'] === null ? null : new Date(json['window_end'])),
        'windowStart': !exists(json, 'window_start') ? undefined : (json['window_start'] === null ? null : new Date(json['window_start'])),
        'probability': !exists(json, 'probability') ? undefined : json['probability'],
        'holdreason': !exists(json, 'holdreason') ? undefined : json['holdreason'],
        'failreason': !exists(json, 'failreason') ? undefined : json['failreason'],
        'hashtag': !exists(json, 'hashtag') ? undefined : json['hashtag'],
        'launchServiceProvider': AgencySerializerMiniFromJSON(json['launch_service_provider']),
        'rocket': RocketSerializerCommonFromJSON(json['rocket']),
        'mission': MissionFromJSON(json['mission']),
        'pad': PadFromJSON(json['pad']),
        'webcastLive': !exists(json, 'webcast_live') ? undefined : json['webcast_live'],
        'image': json['image'],
        'infographic': json['infographic'],
        'program': ((json['program'] as Array<any>).map(ProgramFromJSON)),
    };
}

export function LaunchSerializerCommonToJSON(value?: LaunchSerializerCommon | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'slug': value.slug,
        'name': value.name,
        'net': value.net === undefined ? undefined : (value.net === null ? null : value.net.toISOString()),
        'window_end': value.windowEnd === undefined ? undefined : (value.windowEnd === null ? null : value.windowEnd.toISOString()),
        'window_start': value.windowStart === undefined ? undefined : (value.windowStart === null ? null : value.windowStart.toISOString()),
        'probability': value.probability,
        'holdreason': value.holdreason,
        'failreason': value.failreason,
        'hashtag': value.hashtag,
        'webcast_live': value.webcastLive,
    };
}

