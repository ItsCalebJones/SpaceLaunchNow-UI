/* tslint:disable */
/* eslint-disable */
/**
 * Launch Library
 * The Launch Library API is a product by The Space Devs with an up-to-date database of Spaceflight events.   While this API is free to use it is subject to rate limiting for non-authenticated requests.  Please use https://lldev.thespacedevs.com for development testing - the development endpoint has stale data but is not subject to any rate limits.  If you are interested in a higher rate limit please consider supporting the project on Patreon for access to an API Key.
 *
 * The version of the OpenAPI document: v2.2.0
 * Contact: support@thespacedevs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Location,
    LocationFromJSON,
    LocationFromJSONTyped,
    LocationToJSON,
} from './Location';

/**
 * 
 * @export
 * @interface Pad
 */
export interface Pad {
    /**
     * 
     * @type {number}
     * @memberof Pad
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof Pad
     */
    readonly url: string;
    /**
     * 
     * @type {number}
     * @memberof Pad
     */
    agencyId?: number | null;
    /**
     * 
     * @type {string}
     * @memberof Pad
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Pad
     */
    infoUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Pad
     */
    wikiUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Pad
     */
    mapUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Pad
     */
    latitude?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Pad
     */
    longitude?: string | null;
    /**
     * 
     * @type {Location}
     * @memberof Pad
     */
    location: Location;
    /**
     * 
     * @type {string}
     * @memberof Pad
     */
    mapImage?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Pad
     */
    readonly totalLaunchCount: number;
}

export function PadFromJSON(json: any): Pad {
    return PadFromJSONTyped(json, false);
}

export function PadFromJSONTyped(json: any, ignoreDiscriminator: boolean): Pad {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'url': json['url'],
        'agencyId': !exists(json, 'agency_id') ? undefined : json['agency_id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'infoUrl': !exists(json, 'info_url') ? undefined : json['info_url'],
        'wikiUrl': !exists(json, 'wiki_url') ? undefined : json['wiki_url'],
        'mapUrl': !exists(json, 'map_url') ? undefined : json['map_url'],
        'latitude': !exists(json, 'latitude') ? undefined : json['latitude'],
        'longitude': !exists(json, 'longitude') ? undefined : json['longitude'],
        'location': LocationFromJSON(json['location']),
        'mapImage': !exists(json, 'map_image') ? undefined : json['map_image'],
        'totalLaunchCount': json['total_launch_count'],
    };
}

export function PadToJSON(value?: Pad | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'agency_id': value.agencyId,
        'name': value.name,
        'info_url': value.infoUrl,
        'wiki_url': value.wikiUrl,
        'map_url': value.mapUrl,
        'latitude': value.latitude,
        'longitude': value.longitude,
        'location': LocationToJSON(value.location),
        'map_image': value.mapImage,
    };
}

